/*
 * Copyright (C) 2019  SuperGreenLab <towelie@supergreenlab.com>
 * Author: Constantin Clauzel <constantin.clauzel@gmail.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#include "kv.h"

<% Object.keys(modules).filter(m => modules[m].array_len).forEach(m => {
  m = modules[m]
  Object.keys(m.fields).forEach(f => { 
    f = m.fields[f]
    i = parseInt(f.name.split('_')[1])
    p = f.name.split('_').splice(0, 2).join('_') %>
    <% if (f.write_cb) { %>
    int on_set_<%= m.field_prefix %>_<%= f.suffix %>(int value) {
      return on_set_led_<%= f.suffix %>(<%= i %>, value);
    }
    <% } %>
<% })}) %>

<% Object.keys(modules).filter(m => modules[m].array_len).forEach(m => { %>
  int get_led_<%= p %>(int i) {
    switch(ledId) {
    <% if (led_loop_i) { %>
      case {{.}}:
        return get_led_<%=  %>_## param(ledId);
    <% } %>
    }
    return 0;
  }
<% }) %>
